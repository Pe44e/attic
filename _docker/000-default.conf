<VirtualHost *:80>

	ServerAdmin webmaster@localhost
	# This is mapped at run-time
	DocumentRoot /var/www/site.apache.org

	# Always set CSP; ensure this agrees with TLP version

	# Base foundation allowances: self, data/blob, inline, and our own known domains
	SetEnv CSP_INFRA_BASE "'self' data: blob: 'unsafe-inline' 'unsafe-eval' https://www.apachecon.com/ https://www.communityovercode.org/ https://*.apache.org/ https://apache.org/"
	
	# Third party approved domains, separate with space
	SetEnv CSP_THIRD_PARTY "https://*.scarf.sh/ "
	
	# CSP_PROJECT_DOMAINS can be set in .htaccess to expand CSP. MUST have commentary in the .htaccess file explaining why these domains are added and with whose permission.
	SetEnv CSP_PROJECT_DOMAINS ""
	Header set Content-Security-Policy "default-src %{CSP_INFRA_BASE}e %{CSP_THIRD_PARTY}e %{CSP_PROJECT_DOMAINS}e; script-src %{CSP_INFRA_BASE}e %{CSP_THIRD_PARTY}e %{CSP_PROJECT_DOMAINS}e; style-src %{CSP_INFRA_BASE}e %{CSP_THIRD_PARTY}e %{CSP_PROJECT_DOMAINS}e; frame-ancestors 'self'; frame-src %{CSP_INFRA_BASE}e %{CSP_THIRD_PARTY}e %{CSP_PROJECT_DOMAINS}e; worker-src 'self' data: blob:;"


	# Allow .htaccess Header set CSP
	<Directory /var/www/site.apache.org/>
		# from TLP node definition
		AllowOverride All
		Options Indexes FollowSymLinks MultiViews ExecCGI
		# We don't want to generate an index with index.cgi, as that invokes closer.lua
		DirectoryIndex disabled
		DirectoryIndex index.html
	</Directory>

	LuaScope thread
	LuaCodeCache stat

	# CGI handling
	RewriteEngine On
	RewriteOptions InheritDown
	# the f variable must not contain //; it appears that DOCUMENT_ROOT terminates with /
	RewriteRule .*\.cgi /var/www/dyn/closer.lua?f=%{DOCUMENT_ROOT}%{REQUEST_FILENAME} [QSA,L]
	RewriteRule ^/dyn/closer\.lua /var/www/dyn/closer.lua?f=%{DOCUMENT_ROOT}%{REQUEST_FILENAME} [QSA,L]
	RewriteRule ^/dyn/closer_still\.lua /var/www/dyn/closer_still.lua?f=%{DOCUMENT_ROOT}%{REQUEST_FILENAME} [QSA,L]
	# This is mapped at run-time
	<Directory /var/www/dyn/>
		Require all granted
		<FilesMatch "closer\.lua">
			SetHandler lua-script
		</FilesMatch>
		<FilesMatch "closer_still\.lua">
			SetHandler lua-script
		</FilesMatch>
	</Directory>

	# Filter website to add Attic header if marker directory is present
	# LuaOutputFilter attic "/etc/apache2/conf-enabled/attic_filter.lua" output_filter
	# Wrapper to allow override of hostname
	LuaPackagePath /etc/apache2/conf-enabled/?.lua
	LuaOutputFilter attic "/etc/apache2/conf-enabled/wrapper.lua" output_filter_wrapper
	<If "-d '/var/www/site.apache.org/_ATTIC' || env('VAR_ATTIC') == 'yes'">
		# shell is needed for use with externalredirect.shell
		AddOutputFilter attic html lua shell
	</If>

	<Directory /var/www/site.apache.org/cgi>
		Options +ExecCGI
		AddHandler cgi-script .shell
	</Directory>

	<If "-n env('VAR_HOSTURL')">
		# pass variable to script
		SetEnv VAR_HOSTURL "${VAR_HOSTURL}"
		# Don't allow redirect to self (container localhost is host.docker.internal)
		RewriteCond %{HTTP_HOST} !^localhost$
		RewriteCond %{REQUEST_URI} !^/cgi
		RewriteRule "/" /cgi/externalredirect.shell [QSA,L]
	</If>

	# Available loglevels: trace8, ..., trace1, debug, info, notice, warn,
	# error, crit, alert, emerg.
	# It is also possible to configure the loglevel for particular
	# modules, e.g.
	#LogLevel info ssl:warn

	LogLevel ${VAR_LEVEL}

	ErrorLog /var/log/apache2/error.log
	CustomLog /var/log/apache2/access.log combined

</VirtualHost>
